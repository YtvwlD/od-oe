#taken from https://www.sourceware.org/ml/libc-alpha/2004-10/msg00016.html

diff -crB glibc-2.3.2.orig/elf/Makefile glibc-2.3.2/elf/Makefile
*** glibc-2.3.2.orig/elf/Makefile	Thu Mar  9 12:09:34 2017
--- glibc-2.3.2/elf/Makefile		Thu Mar  9 12:01:45 2017
***************
*** 37,43 ****
  
  # ld.so uses those routines, plus some special stuff for being the program
  # interpreter and operating independent of libc.
! rtld-routines	:= rtld $(dl-routines) dl-sysdep dl-environ dl-minimal
  all-rtld-routines = $(rtld-routines) $(sysdep-rtld-routines)
  
  # We only need to re-run initializers if ld.so and libc.so might be built
--- 37,44 ----
  
  # ld.so uses those routines, plus some special stuff for being the program
  # interpreter and operating independent of libc.
! rtld-routines	:= rtld $(dl-routines) dl-sysdep dl-environ \
! 		   dl-minimal dl-errno
  all-rtld-routines = $(rtld-routines) $(sysdep-rtld-routines)
  
  # We only need to re-run initializers if ld.so and libc.so might be built
***************
*** 221,231 ****
  # those modules come from and builds special rtld-foo.os versions that
  # are compiled with special flags, and puts these modules into rtld-libc.a
  # for us.  Then we do the real link using rtld-libc.a instead of libc_pic.a.
  
  $(objpfx)librtld.map: $(objpfx)dl-allobjs.os $(common-objpfx)libc_pic.a
  	@-rm -f $@T
! 	$(reloc-link) -o $@.o '-Wl,-(' $^ -lgcc '-Wl,-)' -Wl,-Map,$@T
! 	rm -f $@.o
  	mv -f $@T $@
  
  $(objpfx)librtld.mk: $(objpfx)librtld.map Makefile
--- 222,238 ----
  # those modules come from and builds special rtld-foo.os versions that
  # are compiled with special flags, and puts these modules into rtld-libc.a
  # for us.  Then we do the real link using rtld-libc.a instead of libc_pic.a.
+ # `errno' is a special case. We don't want the one in libc_pic.a since
+ # `errno' in libc_pic.a may be a TLS, but the dynamic linker doesn't
+ # use TLS. The linker doesn't allow mixing TLS and non-TLS symbols.
  
  $(objpfx)librtld.map: $(objpfx)dl-allobjs.os $(common-objpfx)libc_pic.a
  	@-rm -f $@T
! 	@rm -f libc_rtld.a
! 	cp $(common-objpfx)libc_pic.a $(common-objpfx)libc_rtld.a
! 	$(AR) d$(verbose) $(common-objpfx)libc_rtld.a errno.os
! 	$(reloc-link) -o $@.o '-Wl,-(' $(objpfx)dl-allobjs.os $(common-objpfx)libc_rtld.a -lgcc '-Wl,-)' -Wl,-Map,$@T
! 	rm -f $@.o $(common-objpfx)libc_rtld.a
  	mv -f $@T $@
  
  $(objpfx)librtld.mk: $(objpfx)librtld.map Makefile
***************
*** 234,240 ****
  	    $< | \
  	while read lib file; do \
  	  case $$lib in \
! 	  libc_pic.a) \
  	    LC_ALL=C fgrep -l /$$file \
  		  $(common-objpfx)stamp.os $(common-objpfx)*/stamp.os | \
  	    LC_ALL=C \
--- 241,247 ----
  	    $< | \
  	while read lib file; do \
  	  case $$lib in \
! 	  libc_rtld.a) \
  	    LC_ALL=C fgrep -l /$$file \
  		  $(common-objpfx)stamp.os $(common-objpfx)*/stamp.os | \
  	    LC_ALL=C \

 
 $(objpfx)librtld.mk: $(objpfx)librtld.map Makefile
@@ -242,7 +249,7 @@ $(objpfx)librtld.mk: $(objpfx)librtld.ma
 	    $< | \
 	while read lib file; do \
 	  case $$lib in \
-	  libc_pic.a) \
+	  libc_rtld.a) \
 	    LC_ALL=C fgrep -l /$$file \
 		  $(common-objpfx)stamp.os $(common-objpfx)*/stamp.os | \
 	    LC_ALL=C \
 	    
diff -crB /dev/null glibc-2.3.2/elf/dl-errno.c
*** /dev/null 					Thu Mar  9 09:25:04 2017
--- glibc-2.3.2/elf/dl-errno.c	Thu Mar  9 12:06:46 2017
***************
*** 0 ****
--- 1,19 ----
+ /* Copyright (C) 2004 Free Software Foundation, Inc.
+    This file is part of the GNU C Library.
+ 
+    The GNU C Library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Lesser General Public
+    License as published by the Free Software Foundation; either
+    version 2.1 of the License, or (at your option) any later version.
+ 
+    The GNU C Library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Lesser General Public License for more details.
+ 
+    You should have received a copy of the GNU Lesser General Public
+    License along with the GNU C Library; if not, write to the Free
+    Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+    02111-1307 USA.  */
+ 
+ #include <errno.c>
